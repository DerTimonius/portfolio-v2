---
import Layout from '~/layouts/Layout.astro';
import fetchApi from '~/lib/strapi';
import type { Image as ImageT, ApiImage as ImageType } from '~/utils/interface';
import { getImageInfo } from '~/utils/images';
import Gallery from '~/components/Gallery.astro';
import { Image } from 'astro:assets';
import landscapeImage from '~/images/DSCF0441.jpg';

const fetched = await fetchApi<ImageType[]>({
  endpoint: 'images',
  returnOnlyData: true,
  query: '?populate=*',
});
// const images = fetched.map((img) => getImageInfo(img))
const imagesWithInfo = fetched.map((img) => getImageInfo(img));
const images = new Array(4).fill(imagesWithInfo).flat() as ImageT[];
---

<Layout title="DerTimonius Photography">
  <div>
    <div class="min-h-screen flex justify-center items-center">
      <!-- Container -->
      <div
        class="mx-auto w-full max-w-7xl px-5 py-16 md:px-10 md:py-24 lg:py-32"
      >
        <!-- Component -->
        <div
          class="grid grid-cols-1 items-center gap-8 md:gap-16 lg:grid-cols-2 lg:gap-24"
        >
          <!-- Hero Heading -->
          <div class="flex flex-col items-start">
            <div class="mb-5">
              <h1
                class="'inline-flex animate-background-shine bg-[linear-gradient(110deg,#939393,45%,#1e293b,55%,#939393)] bg-[length:250%_100%] bg-clip-text text-4xl md:text-6xl text-transparent'"
              >
                capture light. {' '}
                 create art.
              </h1>
            </div>
            <div class="mb-7">
              <div class="mx-auto w-full max-w-lg">
                <p class="text-slate-600">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit ut
                  aliquam, purus sit amet luctus venenatis, lectus
                </p>
              </div>
            </div>
            <!-- Button Wrap -->
            <a href="/category">
              <button
                class="min-w-[240px] relative inline-flex h-12 overflow-hidden rounded-full p-[1px] focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50"
              >
                <span
                  class="absolute inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]"
                ></span>
                <span
                  class="inline-flex h-full w-full cursor-pointer items-center justify-center rounded-full bg-slate-950 px-3 py-1 text-sm font-medium text-white backdrop-blur-3xl"
                >
                  Click Me
                </span>
              </button>
            </a>
          </div>
          <!-- Hero Image -->
          <div>
            <Image src={landscapeImage} alt="" class="inline-block" />
          </div>
        </div>
      </div>
    </div>
    <div class="snap-y overflow-scroll">
      <Gallery {images} portfolio />
    </div>
  </div>

  <style>
    .astro-a {
      position: absolute;
      top: -32px;
      left: 50%;
      transform: translatex(-50%);
      width: 220px;
      height: auto;
      z-index: -1;
    }
    h1 {
      font-size: 4rem;
      font-weight: 700;
      line-height: 1;
      text-align: center;
      margin-bottom: 1em;
    }
    .text-gradient {
      background-image: var(--accent-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400%;
      background-position: 0%;
    }
    .instructions {
      margin-bottom: 2rem;
      border: 1px solid rgba(var(--accent-light), 25%);
      background: linear-gradient(
        rgba(var(--accent-dark), 66%),
        rgba(var(--accent-dark), 33%)
      );
      padding: 1.5rem;
      border-radius: 8px;
    }
    .instructions code {
      font-size: 0.8em;
      font-weight: bold;
      background: rgba(var(--accent-light), 12%);
      color: rgb(var(--accent-light));
      border-radius: 4px;
      padding: 0.3em 0.4em;
    }
    .instructions strong {
      color: rgb(var(--accent-light));
    }
    .link-card-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
      gap: 2rem;
      padding: 0;
    }
  </style>
</Layout>
